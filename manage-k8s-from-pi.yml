---
# manage-k8s-from-pi.yml - Various VM management tasks from Pi

- name: Manage K8s VMs on laptop from Raspberry Pi
  hosts: laptop
  gather_facts: no
  
  tasks:
    - name: List all VMs
      become: yes
      shell: virsh list --all
      register: vm_list
      tags: [list, status]

    - name: Show VM status
      debug:
        var: vm_list.stdout_lines
      tags: [list, status]

    - name: Get VM IPs
      become: yes
      shell: |
        virsh net-dhcp-leases default | grep k8s | awk '{print $6, $5}'
      register: vm_ips
      tags: [ips, status]

    - name: Show VM IPs
      debug:
        msg: 
          - "K8s VM IPs for SSH from Pi:"
          - "{{ vm_ips.stdout_lines }}"
      tags: [ips, status]

    - name: Stop all K8s VMs
      become: yes
      shell: |
        for vm in k8s-control k8s-worker1 k8s-worker2; do
          virsh shutdown $vm 2>/dev/null || true
        done
      tags: [never, stop]

    - name: Start all K8s VMs
      become: yes
      shell: |
        for vm in k8s-control k8s-worker1 k8s-worker2; do
          virsh start $vm 2>/dev/null || true
        done
      tags: [never, start]

    - name: Restart all K8s VMs
      become: yes
      shell: |
        for vm in k8s-control k8s-worker1 k8s-worker2; do
          virsh reboot $vm 2>/dev/null || true
        done
      tags: [never, restart]

# Usage examples:
# ansible-playbook -i laptop-inventory.ini manage-k8s-from-pi.yml --tags status
# ansible-playbook -i laptop-inventory.ini manage-k8s-from-pi.yml --tags ips
# ansible-playbook -i laptop-inventory.ini manage-k8s-from-pi.yml --tags start
# ansible-playbook -i laptop-inventory.ini manage-k8s-from-pi.yml --tags stop