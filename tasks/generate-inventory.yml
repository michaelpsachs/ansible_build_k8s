---
- name: "Get VM IP addresses"
  shell: |
    virsh domifaddr k8s-control | grep -E 'ipv4' | awk '{print $4}' | cut -d'/' -f1
  register: control_ip
  
- name: "Get worker1 IP"
  shell: |
    virsh domifaddr k8s-worker1 | grep -E 'ipv4' | awk '{print $4}' | cut -d'/' -f1
  register: worker1_ip
  
- name: "Get worker2 IP"
  shell: |
    virsh domifaddr k8s-worker2 | grep -E 'ipv4' | awk '{print $4}' | cut -d'/' -f1
  register: worker2_ip

- name: "Create Kubespray inventory directory"
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - "~/kubespray/inventory/mycluster"
    - "~/kubespray/inventory/mycluster/group_vars"
    - "~/kubespray/inventory/mycluster/group_vars/all"
    - "~/kubespray/inventory/mycluster/group_vars/k8s_cluster"

- name: "Create inventory file with dynamic IPs"
  copy:
    content: |
      all:
        hosts:
          k8s-control:
            ansible_host: {{ control_ip.stdout.strip() }}
            ansible_user: ubuntu
            ansible_ssh_common_args: '-o ProxyJump={{ kvm_user }}@{{ kvm_host }} -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
            ip: {{ control_ip.stdout.strip() }}
            access_ip: {{ control_ip.stdout.strip() }}
          k8s-worker1:
            ansible_host: {{ worker1_ip.stdout.strip() }}
            ansible_user: ubuntu
            ansible_ssh_common_args: '-o ProxyJump={{ kvm_user }}@{{ kvm_host }} -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
            ip: {{ worker1_ip.stdout.strip() }}
            access_ip: {{ worker1_ip.stdout.strip() }}
          k8s-worker2:
            ansible_host: {{ worker2_ip.stdout.strip() }}
            ansible_user: ubuntu
            ansible_ssh_common_args: '-o ProxyJump={{ kvm_user }}@{{ kvm_host }} -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
            ip: {{ worker2_ip.stdout.strip() }}
            access_ip: {{ worker2_ip.stdout.strip() }}
        children:
          kube_control_plane:
            hosts:
              k8s-control:
          kube_node:
            hosts:
              k8s-worker1:
              k8s-worker2:
          etcd:
            hosts:
              k8s-control:
          k8s_cluster:
            children:
              kube_control_plane:
              kube_node:
          calico_rr:
            hosts: {}
    dest: "~/kubespray/inventory/mycluster/hosts.yml"

- name: "Test Ansible connectivity with proper shell"
  shell: |
    cd ~/kubespray
    /bin/bash -c "source venv/bin/activate 2>/dev/null || python3 -m venv venv && source venv/bin/activate && ansible -i inventory/mycluster/hosts.yml all -m ping"
  register: ping_test
  ignore_errors: yes